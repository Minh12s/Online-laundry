@{
    Layout = "~/Views/Shared/User_Layout.cshtml";
    ViewData["Title"] = "Details";
}
@{
    var isFavorite = false; // Biến này sẽ đại diện cho trạng thái yêu thích của sản phẩm
    var favoriteIcon = User.Identity.IsAuthenticated ? "fa-solid fa-heart" : "fa-regular fa-heart"; // Xác định biểu tượng yêu thích ban đầu dựa trên việc người dùng đã đăng nhập hay chưa
}
<style>
    .alert {
        text-align: center;
        margin: 20px auto;
        width: 100%; /* Điều chỉnh độ rộng của thông báo tùy theo nhu cầu */
    }

        .alert.error {
            background-color: red;
            color: white;
        }

        .alert.success {
            background-color: green;
            color: white;
        }

    .favoriteForm button {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 30px 27px 30px 27px;
        box-shadow: rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
        background-color: #e8e8e8;
        border-color: #ffe2e2;
        border-style: solid;
        border-width: 9px;
        border-radius: 35px;
        transition: transform 400ms cubic-bezier(.68,-0.55,.27,2.5), border-color 400ms ease-in-out, background-color 400ms ease-in-out;
        word-spacing: -2px;
    }



        .favoriteForm button:hover {
            background-color: #eee;
            transform: scale(105%);
            animation: movingBorders 3s infinite;
        }

        .favoriteForm button svg {
            fill: rgb(255, 110, 110);
        }



        .favoriteForm button:hover svg {
            transform: scale(105%);
            border-color: #ffd8d8;
            animation: beatingHeart 1.2s infinite;
        }

    .details-list {
        list-style-type: none;
        padding: 0;
    }

        .details-list li {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
        }

        .details-list span:first-child {
            flex: 1;
        }

        .details-list span:last-child {
            flex: 2;
            text-align: left;
            margin-right: 20px;
        }

    .img-wrapper {
        border: 2px solid #ccc; /* Thêm viền xung quanh ảnh */
        padding: 10px; /* Thêm padding nếu cần */
        overflow: hidden;
        position: relative;
        width: 100%;
        height: 90%;
    }

        .img-wrapper img {
            transition: transform 0.3s ease;
        }

        .img-wrapper:hover .overlay {
            opacity: 1;
        }

    .small-images-container {
        width: 530px; /* Điều chỉnh kích thước container theo nhu cầu */
        overflow: hidden; /* Ẩn các sản phẩm nằm ngoài phạm vi container */
    }

    .small-images {
        display: flex;
        justify-content: space-around;
        margin-top: 10px;
        transition: transform 0.5s ease; /* Áp dụng hiệu ứng chuyển động */
        -webkit-overflow-scrolling: touch;
    }

    .small-image {
        width: 120px;
        height: 120px;
        cursor: pointer;
        border: 2px solid #ccc;
        box-sizing: border-box;
        margin: 5px;
        cursor: pointer;
    }

        .small-image:hover {
            transform: scale(1.1); /* Phóng to khi rê chuột vào */
        }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        opacity: 0;
        transition: opacity 0.3s ease;
    }
</style>
<div class="hero-wrap hero-bread" style="background-image: url('/images/anhbg1.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="index.html">Home</a></span> <span class="mr-2"><a href="index.html">Product</a></span> <span>Product Single</span></p>
                <h1 class="mb-0 bread">Product Single</h1>
            </div>
        </div>
    </div>
</div>
@if (TempData["Message"] != null)
{
    <div class="alert @TempData["MessageType"]" role="alert">
        @TempData["Message"]
    </div>
}



<section class="ftco-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mb-5 ftco-animate">
                <div class="img-wrapper" onmousemove="zoom(event)" onmouseleave="resetZoom()">
                    <img id="image" src="@ViewBag.ProductThumbnail" class="img-fluid" alt="Colorlib Template">
                </div>
                <div class="small-images-container">
                    <div class="small-images">
                        <img src="@ViewBag.SmallThumbnail1" class="small-image" alt="Small Image 1" onclick="showLargeImage(this)">
                        <img src="@ViewBag.SmallThumbnail2" class="small-image" alt="Small Image 2" onclick="showLargeImage(this)">
                        <img src="@ViewBag.SmallThumbnail3" class="small-image" alt="Small Image 3" onclick="showLargeImage(this)">
                        <img src="@ViewBag.SmallThumbnail4" class="small-image" alt="Small Image 4" onclick="showLargeImage(this)">
                    </div>
                </div>
            </div>


            <script>function showLargeImage(img) {
                    var largeImage = document.getElementById('large-image');
                    largeImage.src = img.src;
                }</script>


            <div class="col-lg-6 product-details pl-md-5 ftco-animate">
                <h3>@ViewBag.ProductName</h3>
                <div class="rating d-flex">
                    <p class="text-left mr-4">
                        <a href="#" class="mr-2">5.0</a>
                        <a href="#"><span class="ion-ios-star-outline"></span></a>
                        <a href="#"><span class="ion-ios-star-outline"></span></a>
                        <a href="#"><span class="ion-ios-star-outline"></span></a>
                        <a href="#"><span class="ion-ios-star-outline"></span></a>
                        <a href="#"><span class="ion-ios-star-outline"></span></a>
                    </p>
                    <p class="text-left mr-4">
                        <a href="#" class="mr-2" style="color: #000;">100 <span style="color: #bbb;">Rating</span></a>
                    </p>
                    <p class="text-left">
                        <a href="#" class="mr-2" style="color: #000;">500 <span style="color: #bbb;">Sold</span></a>
                    </p>
                </div>
                <p class="price"><span>$@ViewBag.ProductPrice</span></p>
                <ul class="details-list">
                    <li>
                        <span>CertificationCode: </span>
                        <span>  @ViewBag.CertificationCode</span>
                    </li>

                    <li class="">
                        <span>Brand: </span>
                        <span> @ViewBag.BrandName</span>
                    </li>

                    <li class="">
                        <span>StoneType:  </span>
                        <span>  @ViewBag.StoneType</span>
                    </li>

                    <li class="">
                        <span>Material:   </span>
                        <span>  @ViewBag.Material </span>
                    </li>

                    <li class="">
                        <span>TotalWeight:   </span>
                        <span>   @ViewBag.TotalWeight</span>
                    </li>

                    <li class="">
                        <span>Color:  </span>
                        <span> @ViewBag.Color</span>

                    </li>

                    <li class="">
                        <span>GoldAge:    </span>
                        <span>  @ViewBag.GoldAge </span>
                    </li>

                </ul>
                <div class="row mt-4">
                    <div class="col-md-6">
                        @if (ViewBag.ProductAvailability > 0)
                        {
                            var remainingQuantity = ViewBag.ProductAvailability;
                            <form method="post" asp-controller="Cart" asp-action="AddToCart" asp-route-slug="@ViewBag.ProductSlug">
                                <div class="input-group d-flex mb-3">
                                    <span class="input-group-btn mr-2">
                                        <button type="button" class="quantity-left-minus btn" data-type="minus" data-field="">
                                            <i class="ion-ios-remove"></i>
                                        </button>
                                    </span>
                                    <input style="margin-top:-40px; margin-left:42px;width:230px;" type="number" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="@remainingQuantity">
                                    <span class="input-group-btn ml-2">
                                        <button style="position: relative; top: -40px; margin-left: 234px; " type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                                            <i class="ion-ios-add"></i>
                                        </button>
                                    </span>
                                </div>
                                <div class="w-100"></div>
                                <div class="col-md-12">
                                    <p style="color: #000;">@remainingQuantity products available</p>
                                </div>
                                <input type="submit" class="btn btn-primary py-3 px-5" value="ADD TO CART">
                            </form>
                        }
                        else
                        {
                            <form method="post" asp-controller="Cart" asp-action="AddToCart" asp-route-slug="@ViewBag.ProductSlug">
                                <div class="input-group d-flex mb-3">
                                    <span class="input-group-btn mr-2">
                                        <button type="button" class="quantity-left-minus btn" data-type="minus" data-field="" disabled>
                                            <i class="ion-ios-remove"></i>
                                        </button>
                                    </span>
                                    <input style="margin-top:-40px; margin-left:42px;width:230px;" type="number" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" disabled>
                                    <span class="input-group-btn ml-2">
                                        <button style="position: relative; top: -40px; margin-left: 234px; " type="button" class="quantity-right-plus btn" data-type="plus" data-field="" disabled>
                                            <i class="ion-ios-add"></i>
                                        </button>
                                    </span>
                                </div>
                                <div class="w-100"></div>
                                <div class="col-md-12">
                                    <p style="color:red;">The product is out of stock</p>
                                </div>
                                <input type="submit" class="btn btn-primary py-3 px-5" value="ADD TO CART" disabled>
                            </form>
                        }
                    </div>
                    <div class="col-md-6" style="margin-top: 140px; margin-left: -60px;">
                        <!-- Mã HTML của nút yêu thích -->
                        <form method="post" class="favoriteForm" asp-action="AddToFavorite" asp-controller="Favorite">
                            <input type="hidden" name="slug" value="@ViewBag.ProductSlug" />
                            <button type="submit" style="border:1px solid white;" class="heart-icon">
                                <svg height="32" width="32" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M0 0H24V24H0z" fill="none"></path>
                                    <path class="heart-path" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5C9.5 20 2 16 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2z"></path>
                                </svg>
                            </button>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

<section class="ftco-section bg-light">
    <div class="container">

        <div class="row justify-content-center mb-3 pb-3">
            <div class="col-md-12 heading-section text-center ftco-animate">
                <h2 class="mb-4">Related Products</h2>
                <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>
            </div>
        </div>

        <div class="row">
            @foreach (var relatedProduct in ViewBag.RelatedProducts)
            {
                <div class="col-sm col-md-6 col-lg ftco-animate">
                    <div class="product">
                        <a href="#" class="img-prod">
                            <img class="img-fluid" src="@relatedProduct.Thumbnail" alt="@relatedProduct.ProductName">
                            <div class="overlay"></div>
                        </a>
                        <div class="text py-3 px-3">
                            <h3><a href="@Url.Action("Details", "Page", new { slug = relatedProduct.Slug })">@relatedProduct.ProductName</a></h3>
                            <div class="d-flex">
                                <div class="pricing">
                                    <p class="price">$@relatedProduct.Price</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</section>

<script src="~/js/jquery.min.js"></script>
<script src="~/js/jquery-migrate-3.0.1.min.js"></script>
<script src="~/js/popper.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/jquery.easing.1.3.js"></script>
<script src="~/js/jquery.waypoints.min.js"></script>
<script src="~/js/jquery.stellar.min.js"></script>
<script src="~/js/owl.carousel.min.js"></script>
<script src="~/js/jquery.magnific-popup.min.js"></script>
<script src="~/js/aos.js"></script>
<script src="~/js/jquery.animateNumber.min.js"></script>
<script src="~/js/bootstrap-datepicker.js"></script>
<script src="~/js/scrollax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
<script src="~/js/google-map.js"></script>
<script src="~/js/main.js"></script>



<script>$(document).ready(function () {

        var quantitiy = 0;
        $('.quantity-right-plus').click(function (e) {

            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            var quantity = parseInt($('#quantity').val());

            // If is not undefined

            $('#quantity').val(quantity + 1);


            // Increment

        });

        $('.quantity-left-minus').click(function (e) {
            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            var quantity = parseInt($('#quantity').val());

            // If is not undefined

            // Increment
            if (quantity > 0) {
                $('#quantity').val(quantity - 1);
            }
        });

    });</script>
<script>document.querySelectorAll('.favoriteForm').forEach(form => {
        var heartButton = form.querySelector('.heart-icon');
        var heartIcon = heartButton.querySelector('.heart-path'); // Thay đổi lấy class của path trong SVG

        // Kiểm tra xem trạng thái của trái tim đã được lưu trong sessionStorage chưa
        var productId = form.querySelector('input[name="productId"]').value;
        var savedHeartIcon = sessionStorage.getItem('heartIcon_' + productId);
        if (savedHeartIcon === 'filled') {
            heartIcon.classList.add('filled');
        }

        // Xử lý sự kiện khi người dùng nhấp vào nút trái tim
        heartButton.addEventListener('click', function () {
            if (!heartIcon.classList.contains('filled')) {
                // Thêm lớp filled nếu người dùng chưa thêm vào mục yêu thích
                heartIcon.classList.add('filled');
                // Lưu trạng thái vào sessionStorage
                sessionStorage.setItem('heartIcon_' + productId, 'filled');
            } else {
                // Xóa lớp filled nếu người dùng đã thêm vào mục yêu thích
                heartIcon.classList.remove('filled');
                // Xóa trạng thái khỏi sessionStorage
                sessionStorage.removeItem('heartIcon_' + productId);
            }
            // Không cần gửi biểu mẫu vì chúng ta đã ngăn chặn hành động mặc định của nút
        });
    });</script>
<script>function zoom(event) {
        const img = document.getElementById("image");
        const boundingRect = event.currentTarget.getBoundingClientRect();
        const offsetX = event.clientX - boundingRect.left;
        const offsetY = event.clientY - boundingRect.top;
        const xPercent = offsetX / boundingRect.width * 100;
        const yPercent = offsetY / boundingRect.height * 100;
        img.style.transformOrigin = `${xPercent}% ${yPercent}%`;
        img.style.transform = "scale(3)";
    }

    function resetZoom() {
        const img = document.getElementById("image");
        img.style.transform = "scale(1)";
    }</script>

<script>function showLargeImage(img) {
        var largeImage = document.getElementById('image');
        largeImage.src = img.src;
        largeImage.style.transform = "scale(1)"; // Reset hiệu ứng zoom khi chuyển đổi ảnh lớn
    }</script>

<script>// Lưu trữ thời gian giữa các lần chuyển đổi (ở đây là 3 giây)
    const slideInterval = 3000;

    // Hàm để di chuyển các sản phẩm từ phải qua trái như một vòng tròn
    function slideImages() {
        const container = document.querySelector('.small-images');
        const images = container.querySelectorAll('.small-image');

        // Lấy kích thước của một sản phẩm
        const itemWidth = images[0].offsetWidth;

        // Di chuyển container từ phải qua trái
        container.style.transition = 'transform 1s ease-in-out'; // Áp dụng hiệu ứng chuyển động
        container.style.transform = `translateX(-${itemWidth}px)`;

        // Sau một khoảng thời gian nhất định, di chuyển sản phẩm cuối cùng lên đầu danh sách
        setTimeout(function () {
            container.appendChild(container.firstElementChild);
            container.style.transition = 'none'; // Tắt hiệu ứng chuyển động tạm thời
            container.style.transform = 'translateX(0)';
        }, slideInterval);
    }

    // Gọi hàm slideImages để bắt đầu chuyển động tự động
    setInterval(slideImages, slideInterval); // Gọi hàm sau mỗi khoảng thời gian giữa các lần chuyển đổi</script>

