@model IEnumerable<OnlineJwellery_Shopping.Models.OrderReturnViewModel>
@{
    ViewData["Title"] = "Order Return";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@{
    // Danh sách các lý do và icon tương ứng
    var reasonIcons = new Dictionary<string, string>
{
    { "Missing quantity/accessories", "mdi mdi-timer-sand" },
    { "Seller sent wrong item", "mdi mdi-cancel" },
    { "The product cannot be used", "mdi mdi-package-variant-closed" },
    { "Different from description", "mdi mdi-thumb-up" },
    { "Counterfeit goods, imitation goods", "mdi mdi-cash-refund" },
    { "The goods are intact but no longer needed", "mdi mdi-arrow-down-bold" }
};

}
<style>
    .text-pending {
        color: orange; /* Màu chữ cho trạng thái "pending" */
    }

    .text-approved {
        color: green; /* Màu chữ cho trạng thái "confirmed" */
    }

    .text-rejected {
        color: red; /* Màu chữ cho trạng thái "shipping" */
    }
    .btn-primary {
        color: rgb(245 157 57);
        background-color: rgb(251 226 197);
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 5px 20px; /* Điều chỉnh kích thước theo ý muốn */
    }

    .edit-button {
        margin-top: 10px; /* Điều chỉnh giá trị margin-top theo ý muốn */
    }

    .btn-add {
        color: white;
        background-color: black;
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 10px 20px; /* Điều chỉnh kích thước theo ý muốn */
    }

    .btn-danger {
        color: #FFF;
        background-color: #dc3545;
        border-color: #dc3545;
        border-color: none;
        /* border-top-left-radius: 10px !important; */
        /* border-bottom-right-radius: 10px !important; */
        border-radius: .357rem;
        border: none;
        font-weight: 600;
        padding: 5px 20px;
    }

        .btn-danger:hover {
            color: #FFF;
            background-color: #c82333;
            border-color: #bd2130;
        }

        .btn-danger:focus, .btn-danger.focus {
            -webkit-box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.5);
            box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.5);
        }

        .btn-danger.disabled, .btn-danger:disabled {
            color: #FFF;
            background-color: #dc3545;
            border-color: #dc3545;
        }

    .button-group {
        display: flex;
    }

        .button-group > * {
            margin-right: 10px; /* Khoảng cách giữa các nút */
        }
</style>
<section class="is-title-bar">
    <div class="flex flex-col md:flex-row items-center justify-between space-y-6 md:space-y-0">
        <ul>
            <li style="margin-left:-50px;">Admin</li>
            <li>Order Return</li>
        </ul>

    </div>

</section>


<section class="section main-section">
    <div class="grid gap-6 grid-cols-1 md:grid-cols-3 mb-6">
        @foreach (var item in reasonIcons)
        {
            <div class="card">
                <div class="card-content">
                    <div class="flex items-center justify-between">
                        <div class="widget-label">
                            <h3>
                                @item.Key <!-- Hiển thị lý do -->
                            </h3>
                            <h1>
                                @(ViewBag.ReasonCounts.ContainsKey(item.Key) ? ViewBag.ReasonCounts[item.Key] : 0)
                            </h1>

                        </div>
                        <span class="icon widget-icon text-red-500"><i class="mdi @item.Value mdi-48px"></i></span> <!-- Icon tương ứng -->
                    </div>
                </div>
            </div>
        }

    </div>
    <section class="is-hero-bar">
        <div class="flex flex-row items-center">
            <!-- Nút "Print PDF" -->
            <button onclick="myApp.printTable()" class="btn btn-add ml-2">
                <i class="fas fa-file-pdf"></i>
                Print PDF
            </button>
            <!-- Nút "Export Excel" -->
            <button onclick="exportReviewToExcel()" class="btn btn-add ml-2" style="margin-left:10px">
                <i class="fas fa-file-excel"></i>
                Export Excel
            </button>
            <button onclick="exportExcel()" class="btn btn-add" style="margin-left:10px;">
                <i class="fas fa-file-excel"></i>
                Excel Filtered
            </button>
        </div>
    </section>
    <form style="display: flex; align-items: center; border-radius: 5px; margin-top: 10px; flex-wrap: wrap;" asp-action="OrderReturn" asp-controller="Admin" method="get">
        <div class="input-group input-group-sm" style="margin-right: -23px; margin-bottom: 10px;" margin-left: -28px;>
            <input value="" class="form-control" type="text" name="Description" placeholder="Description" style="height: 45px; font-size: 0.765625rem; padding: 4px 8px; background-color: #F1F1F1; border-radius: 5px; width: 120px; margin-left: 2px;" />
        </div>
        <div class="input-group input-group-sm" style=" margin-right: 5px; margin-bottom: 10px;">
            <input value="" class="form-control" type="text" name="ReturnDate" placeholder="Return Date" style="height: 45px; font-size: 0.765625rem; padding: 4px 8px; background-color: #F1F1F1; border-radius: 5px; width: 120px; margin-left: 28px;" />
        </div>
        <div class="input-group input-group-sm" style=" margin-right: 5px; margin-bottom: 10px;">
            <select value="" style="height: 45px; font-size: 0.765625rem; padding: 4px 8px; background-color: #F1F1F1; border-radius: 5px; width: 150px; margin-right: -10px;" name="Status" class="form-control">
                <option value="">select status</option>
                <option value="pending">Pending</option>
                <option value="approved">Approved</option>
                <option value="rejected">Rejected</option>
              
            </select>
        </div>
        <div class="input-group input-group-sm" style=" margin-left: 10px; margin-bottom: 10px;">
            <input value="" class="form-control" type="text" name="RefundAmount" placeholder="Refund Amount" style="height: 45px; font-size: 0.765625rem; padding: 4px 8px; background-color: #F1F1F1; border-radius: 5px; width: 120px; margin-right: -10px;" />
        </div>
        <div class="input-group input-group-sm" style="margin-left: 7px; margin-bottom: 10px;">
            <input value="" type="text" name="search" class="form-control" placeholder="Search" style="height: 45px; font-size: 0.765625rem; padding: 4px 8px; background-color: #F1F1F1; border-radius: 5px; width: 300px; margin-left:7px;" />
        </div>
        <div class="input-group input-group-sm" style="margin-bottom: 10px; margin-left: -5px;">
            <button style=" margin-left:10px; height: 45px; background-color: #F1F1F1; border: none; border-radius: 5px;" type="submit" class="btn btn-default">
                <i class="mdi mdi-magnify" style="padding: 10px;"></i>
            </button>
        </div>
    </form>
    <div class="card has-table">
        <header class="card-header">
            <p class="card-header-title">
                @*<span class="icon"><i class="mdi mdi-shopping"></i></span>*@
                Order
            </p>

            <form class="card-header-icon" asp-controller="Admin" asp-action="OrderReturn" method="get" onchange="this.submit()">

                <select style="margin-left:-10px; padding: 5px 10px;border:1px solid #F1F1F1 " name="PageSize">
                    <option value="10"
                            selected="@(ViewBag.PageSize == 10)">
                        10
                    </option>
                    <option value="20"
                            selected="@(ViewBag.PageSize == 20)">
                        20
                    </option>
                    <option value="50"
                            selected="@(ViewBag.PageSize == 50)">
                        50
                    </option>
                    <option value="100"
                            selected="@(ViewBag.PageSize == 100)">
                        100
                    </option>
                </select>

                <input type="hidden" name="page" value="@ViewBag.CurrentPage">

                @*<button style="border:1px solid white ;background-color:#FFA45C; color: white;" type="submit">filter</button>*@

            </form>
        </header>

        <div class="card-content">
            <table class="table table-hover table-bordered js-copytextarea" cellpadding="0" cellspacing="0" border="0" id="sampleTable">
                <thead>
                    <tr>
                        <th width="10"><input type="checkbox" id="all"></th>
                       
                        <th>Id</th>
                        <th>Return Date</th>
                        <th>Reason</th>
                        @*<th>Description</th>*@
                        <th>Refund Amount</th>
                        <th>Image</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dữ liệu danh sách đơn hàng đã trả về -->
                    @foreach (var orderReturn in Model)
                    {
                        <tr>
                            <td><input type="checkbox" class="checkbox"></td>

                            <td>@orderReturn.OrderReturnId</td>
                            <td>@orderReturn.ReturnDate</td>

                            <td>@orderReturn.Reason</td>
                            @*<td>@orderReturn.Description</td>*@
                            <td>@orderReturn.RefundAmount</td>
                            <td>
                                <!-- Hiển thị hình ảnh -->
                                <div style="display: grid; grid-template-columns: repeat(2, 1fr); grid-gap: 10px;">
                                    @if (orderReturn.ReturnImages != null && orderReturn.ReturnImages.Any())
                                    {
                                        @foreach (var image in orderReturn.ReturnImages)
                                        {
                                            <div>
                                                <img style="width:200px; height:100px;" src="@image.ImagePath" alt="Image" />
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <span>No image</span>
                                    }
                                </div>
                            </td>

                            <td>
                                @if (orderReturn.Status == "pending")
                                {
                                    <span class="badge bg-warning text-pending">
                                        <!-- Sử dụng lớp 'text-pending' -->
                                        @orderReturn.Status
                                    </span>
                                }
                                else if (orderReturn.Status == "approved")
                                {
                                    <span class="badge bg-primary text-approved">
                                        <!-- Sử dụng lớp 'text-approved' -->
                                        @orderReturn.Status
                                    </span>
                                }
                                else if (orderReturn.Status == "rejected")
                                {
                                    <span class="badge bg-danger text-rejected">
                                        <!-- Sử dụng lớp 'text-rejected' -->
                                        @orderReturn.Status
                                    </span>
                                }
                            </td>

                            <td class="actions-cell">
                                <div class="buttons right nowrap">

                                    <a asp-action="detailsProduct" asp-controller="Admin" class="btn btn-primary" style="background-color:green; color:white;" asp-route-productId="@orderReturn.ProductId">
                                        <span class="icon"><i class="mdi mdi-eye"></i></span>
                                    </a>
                                </div>
                            </td>
                            <td class="actions-cell">
                                <div class="buttons right nowrap">
                                    <a asp-action="DetailsReturn" asp-controller="Admin" asp-route-id="@orderReturn.OrderReturnId" class="btn btn-primary" style="background-color:#FBE2C5; color:#F59D39;">
                                        <span class="icon"><i class="mdi mdi-refresh"></i></span>
                                    </a>
                                </div>
                            </td>

                        </tr>
                    }

                </tbody>
            </table>

            <div class="table-pagination">
                <div class="flex items-center justify-between">
                    <div class="buttons">
                        <!-- Tạo nút phân trang cho mỗi trang -->
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <button type="button" class="button @(ViewBag.CurrentPage == i ? "active" : "")" onclick="location.href='@Url.Action("OrderReturn", new { page = i, pageSize = ViewBag.PageSize })'">@i</button>
                        }
                    </div>
                    <small>Page @ViewBag.CurrentPage of @ViewBag.TotalPages</small>
                </div>
            </div>


        </div>
    </div>

</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js" integrity="sha512-3P8rXCuGJdNZOnUx/03c1jOTnMn3rP63nBip5gOP2qmUh5YAdVAvFZ1E+QLZZbC1rtMrQb+mah3AfYW11RUrWA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<!-- Data table plugin-->
<!--<script type="text/javascript" src="~/Admin/js/plugins/jquery.dataTables.min.js"></script>-->



<script type="text/javascript">$('#sampleTable').DataTable();</script>
<script>function deleteRow(r) {
        var i = r.parentNode.parentNode.rowIndex;
        document.getElementById("myTable").deleteRow(i);
    }
    jQuery(function () {
        jQuery(".trash").click(function () {
            swal({
                title: "Cảnh báo",

                text: "Bạn có chắc chắn là muốn xóa nhân viên này?",
                buttons: ["Hủy bỏ", "Đồng ý"],
            })
                .then((willDelete) => {
                    if (willDelete) {
                        swal("Đã xóa thành công.!", {

                        });
                    }
                });
        });
    });
    oTable = $('#sampleTable').dataTable();
    $('#all').click(function (e) {
        $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
        e.stopImmediatePropagation();
    });

    $(document).ready(function () {
        // Kiểm tra nếu DataTable đã tồn tại trên bảng
        if ($.fn.DataTable.isDataTable('#sampleTable')) {
            // Nếu có, xóa DataTable đã tồn tại
            $('#sampleTable').DataTable().destroy();
        }

        // Khởi tạo lại DataTable với cài đặt mới
        $('#sampleTable').DataTable({
            paging: false, // Tắt phân trang
            searching: false, // Tắt chức năng tìm kiếm
            ordering: false, // Tắt chức năng sắp xếp
            info: false // Tắt thông báo "Hiện 1 đến 10 của 10 danh mục"
        });
    });



    //In dữ liệu
    var myApp = new function () {
        this.printTable = function () {
            var tab = document.getElementById('sampleTable');
            var win = window.open('', '', 'height=700,width=700');
            win.document.write(tab.outerHTML);
            win.document.close();
            win.print();
        }
    }
    // EXCEL
    $(document).ready(function () {
        $('#exportExcelBtn').click(function (e) {
            e.preventDefault(); // Ngăn chặn hành động mặc định của nút

            // Thu thập dữ liệu từ bảng HTML
            var table = document.getElementById('sampleTable').outerHTML;

            // Tạo tệp Excel từ dữ liệu bảng
            var uri = 'data:application/vnd.ms-excel;base64,';
            var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>Sheet1</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body>{table}</body></html>';
            var base64 = function (s) {
                return window.btoa(unescape(encodeURIComponent(s)));
            };
            var format = function (s, c) {
                return s.replace(/{(\w+)}/g, function (m, p) {
                    return c[p];
                });
            };

            var ctx = {
                worksheet: 'Sheet1',
                table: table
            };

            // Tạo tệp Excel
            var link = document.createElement('a');
            link.href = uri + base64(format(template, ctx));
            link.download = 'products.xls';

            // Thêm liên kết vào tài liệu và kích hoạt sự kiện click để tải xuống
            document.body.appendChild(link);
            link.click();

            // Xóa liên kết sau khi đã tải xuống
            document.body.removeChild(link);
        });
    });
    //Modal
    $("#show-emp").on("click", function () {
        $("#ModalUP").modal({ backdrop: false, keyboard: false })
    });
    
    </script>
<script>function exportReviewToExcel() {
        // Gọi phương thức trong controller để xuất Excel
        window.location.href = '/Excel/ExportCanceledOrdersToExcel';
    }</script>
<script src="https://cdn.jsdelivr.net/npm/exceljs/dist/exceljs.min.js"></script>

<script>
    this.exportExcel = function () {
        // Lấy bảng cần xuất
        var tab = document.getElementById('sampleTable');
        // Tạo một đối tượng Excel
        var excel = new ExcelJS.Workbook();
        // Thêm một trang tính mới
        var sheet = excel.addWorksheet('Sheet 1');
        // Lặp qua các hàng và cột của bảng để đổ dữ liệu vào trang tính Excel
        for (var i = 0; i < tab.rows.length; i++) {
            var row = sheet.getRow(i + 1);
            for (var j = 0; j < tab.rows[i].cells.length; j++) {
                row.getCell(j + 1).value = tab.rows[i].cells[j].innerText;
            }
        }
        // Tạo một blob từ file Excel
        excel.xlsx.writeBuffer().then(function (buffer) {
            var blob = new Blob([buffer], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
            // Tạo một URL từ blob và mở cửa sổ mới để tải xuống file Excel
            var url = window.URL.createObjectURL(blob);
            var a = document.createElement("a");
            document.body.appendChild(a);
            a.style = "display: none";
            a.href = url;
            a.download = "orderreturnfiltered.xlsx";
            a.click();
            window.URL.revokeObjectURL(url);
        });
    }

</script>
